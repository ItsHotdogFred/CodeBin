package main

import (
	"CodeBin/database"
	_ "CodeBin/docs" // swag docs import, generated by swag init
	"CodeBin/handlers"
	"CodeBin/middleware"
	"fmt"
	"net/http"

	"github.com/joho/godotenv"
	httpSwagger "github.com/swaggo/http-swagger"
)

// @title CodeBin API
// @version 1.0
// @description A REST api where you can upload your code snippets for later (or for others)
// @host localhost:8080
// @BasePath /
// @securityDefinitions.apikey BearerAuth
// @in header
// @name Authorization
// @description Type "Bearer" followed by a space and JWT token.

func main() {
	// Load environment variables from .env file if present
	if err := godotenv.Load(); err != nil {
		fmt.Println("No .env file found or error loading .env", err)
	}
	// Initialize database
	database.Initialize()

	mux := http.NewServeMux()
	mux.Handle("/request-token", middleware.RateLimit(15)(http.HandlerFunc(handlers.RequestToken)))
	mux.Handle("/verify-token", middleware.RateLimit(15)(http.HandlerFunc(handlers.VerifyToken)))
	mux.Handle("/create", middleware.RateLimit(15)(http.HandlerFunc(handlers.CreateSnippet)))
	mux.Handle("/view/", middleware.RateLimit(15)(http.HandlerFunc(handlers.ViewSnippet)))
	mux.Handle("/delete/", middleware.RateLimit(15)(http.HandlerFunc(handlers.DeleteSnippet)))
	mux.Handle("/edit/", middleware.RateLimit(15)(http.HandlerFunc(handlers.EditSnippet)))
	mux.Handle("/sl/", middleware.RateLimit(15)(http.HandlerFunc(handlers.SearchLanguage)))
	mux.Handle("/about", middleware.RateLimit(15)(http.HandlerFunc(handlers.AboutMe)))
	mux.Handle("/swagger/", httpSwagger.WrapHandler)

	fmt.Println("Server started at :8080")
	http.ListenAndServe(":8080", mux)
}
